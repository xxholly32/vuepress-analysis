(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{192:function(t,r,e){"use strict";e.r(r);var n=e(0),o=Object(n.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"相关工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关工具","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关工具")]),t._v(" "),e("p",[t._v("记录用到的一些库和主要作用")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/cacjs/cac",target:"_blank",rel:"noopener noreferrer"}},[t._v("cac"),e("OutboundLink")],1),t._v("\n和 commander 类似的命令行工具")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/sindresorhus/globby",target:"_blank",rel:"noopener noreferrer"}},[t._v("globby"),e("OutboundLink")],1),t._v("\n深入遍历文件夹，并返回文件名")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/jonschlinkert/gray-matter",target:"_blank",rel:"noopener noreferrer"}},[t._v("gray-matter"),e("OutboundLink")],1),t._v("\nParse front-matter from a string or file. Fast, reliable and easy to use. Parses YAML front matter by default, but also has support for YAML, JSON, TOML or Coffee Front-Matter, with options to set custom delimiters. Used by metalsmith, assemble, verb and many other projects.")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/toml-lang/toml",target:"_blank",rel:"noopener noreferrer"}},[t._v("Toml"),e("OutboundLink")],1),t._v("\n最小的标准化语言，这里主要配合"),e("code",[t._v("gray-matter")]),t._v("实现解析功能")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[t._v("chokidar"),e("OutboundLink")],1),t._v("\n文件监听，如果有改变，抛出事件")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/PrismJS/prism",target:"_blank",rel:"noopener noreferrer"}},[t._v("PrismJS"),e("OutboundLink")],1),t._v("\n代码高亮，支持多文件多皮肤")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/webpack-contrib/mini-css-extract-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("mini-css-extract-plugin"),e("OutboundLink")],1),t._v("\n一个 webpack 的插件，将多个 js 中的 css 文件合并成一个 css 文件，本项目用于 build 时候的 css 文件抽离")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/moxystudio/node-cross-spawn",target:"_blank",rel:"noopener noreferrer"}},[t._v("cross-spawn"),e("OutboundLink")],1),t._v("\nnodejs 命令行工具，好像类似的工具有很多")])])])},[],!1,null,null,null);r.default=o.exports}}]);